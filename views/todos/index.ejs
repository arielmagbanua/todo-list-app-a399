<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Todos | <%= name %></title>

    <%- include('../partials/styles') %>
  </head>
  <body>
    <%- include('../partials/header') %>
    <main>
      <!-- todos controls -->
      <section>
        <form id="search-form" action="/todos" method="get">
          <input
            type="text"
            id="search"
            name="search"
            value="<%= search %>"
            placeholder="search todos"
          />
          <button type="submit" role="search" id="search-submit">
            <i class="fa-solid fa-magnifying-glass"></i>
          </button>
        </form>
        <button class="open-modal">+</button>
      </section>
      <section class="todos">
        <% todos.forEach((todo) => { %>
        <div class="todo-card">
          <div class="todo-controls">
            <h2 class="title"><%= todo.title %></h2>
            <button class="edit-todo icon-button" data-id="<%= todo._id %>">
              <i class="fa-solid fa-pencil"></i>
            </button>
            <button class="delete-todo icon-button" data-id="<%= todo._id %>">
              <i class="fa-solid fa-trash"></i>
            </button>
          </div>

          <p><%= todo.description %></p>
        </div>
        <% }); %>
      </section>
    </main>

    <!-- Modal -->
    <div id="todo" class="modal">
      <div class="modal-content">
        <span class="modal-close">&times;</span>

        <h2>Add Todo</h2>

        <form id="todo-form">
          <input type="text" id="todo-id" name="todoId" hidden />
          <div class="form-group">
            <label for="title">Title:</label>
            <input type="text" id="title" name="title" required />
          </div>
          <div class="form-group">
            <label for="description">Description:</label>
            <textarea id="description" name="description" rows="5"></textarea>
          </div>
          <div class="form-group">
            <input type="submit" id="save" name="save" value="save" />
          </div>
        </form>
      </div>
    </div>

    <%- include('../partials/footer') %>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.1.2/axios.min.js"></script>
    <script src="/auth/logout.js"></script>

    <script>
      const modal = document.getElementById("todo");
      const openBtn = document.querySelector(".open-modal");
      const closeBtn = document.querySelector(".modal-close");
      const todoForm = document.getElementById("todo-form");

      // open modal
      openBtn.onclick = function () {
        modal.style.display = "flex";
      };

      // close modal
      closeBtn.onclick = function () {
        modal.style.display = "none";
      };

      // close modal when clicking outside
      window.onclick = function (event) {
        if (event.target == modal) {
          modal.style.display = "none";
        }
      };

      // form submission
      todoForm.onsubmit = function (event) {
        event.preventDefault();

        const formData = new FormData(todoForm);
        const data = Object.fromEntries(formData.entries());

        axios({
          method: data?.todoId ? "put" : "post",
          url: "/api/todo",
          data: data,
        })
          .then((res) => {
            if (res.status === 201 || res.status === 200) {
              // hide the modal
              modal.style.display = "none";

              // refresh the page to show the new todo
              window.location.reload();
            }
          })
          .catch((error) => {
            if (error.response) {
              // handle unauthorized error
              alert(error.response.data.message);
              return;
            }

            // hide the modal
            modal.style.display = "none";
            console.log(error);
          });
      };

      // delete todo
      const deleteButtons = document.querySelectorAll(".delete-todo");
      deleteButtons.forEach((button) => {
        // listen for click events on each delete button
        button.onclick = function () {
          // get the todo ID from the button's data-id attribute
          const todoId = this.getAttribute("data-id");

          // confirm the deletion
          const confirmDelete = confirm(
            "Are you sure you want to delete this todo?"
          );
          if (!confirmDelete) {
            return; // exit if the user cancels
          }

          // execute the delete request
          axios({
            method: "delete",
            url: `/api/todo/${todoId}`,
          })
            .then((res) => {
              if (res.status === 200) {
                // refresh the page to show the updated todo list
                window.location.reload();
              }
            })
            .catch((error) => {
              console.error(error.response.data);
            });
        };
      });

      // edit todo
      const editButtons = document.querySelectorAll(".edit-todo");
      editButtons.forEach((button) => {
        button.onclick = function () {
          // get the todo ID from the button's data-id attribute
          const todoId = this.getAttribute("data-id");

          // fetch the todo data
          axios({
            method: "get",
            url: `/api/todo/${todoId}`,
          })
            .then((res) => {
              if (res.status === 200) {
                // show the modal
                modal.style.display = "flex";

                // populate the form with the todo data
                const { title, description } = res.data;
                const todoIdInput = document.getElementById("todo-id");
                const todoTitle = document.getElementById("title");
                const todoDescription = document.getElementById("description");

                todoIdInput.value = todoId;
                todoTitle.value = title;
                todoDescription.value = description;
              }
            })
            .catch((error) => {
              if (error.response) {
                // handle unauthorized error
                alert(error.response.data.message);
                return;
              }

              console.error(error.response);
            });
        };
      });
    </script>
  </body>
</html>
